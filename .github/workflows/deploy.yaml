name: Deploy to Registry

on:
  push:
    branches:
      - main
      - deploy
    tags:
      - 'v*'
      - 'v*.*'
      - 'v*.*.*'
  workflow_dispatch:

env:
  AZURE_RESOURCE_GROUP: ${{ vars.AZURE_RESOURCE_GROUP }}
  AZURE_CONTAINER_REGISTRY: ${{ vars.AZURE_CONTAINER_REGISTRY }}
  IMAGE_NAME: ${{ github.event.repository.name }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read

    steps:
      - uses: actions/checkout@v3

      - name: Determine version tag or fallback to latest
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            # Extract the tag name (e.g., v1.0.0) and remove the 'v' prefix if present
            VERSION=${GITHUB_REF##*/}
            VERSION=${VERSION#v}  # Remove the leading 'v' if it exists
          else
            # Fallback to 'latest' if no tag is present
            VERSION="latest"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build Docker Image
        run: |
          docker build \
            --build-arg NEXT_PUBLIC_AMPLITUDE_API_KEY="${{ secrets.LANDING_AMPLITUDE_API_KEY }}" \
            --build-arg CI=true \
            -t "${{ env.IMAGE_NAME }}" .


      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Tag and Push Docker Image
        run: |
          docker tag ${{ env.IMAGE_NAME }} ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
          if [ -n "${VERSION}" ]; then
            docker tag ${{ env.IMAGE_NAME }} ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          fi
          docker tag ${{ env.IMAGE_NAME }} ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.IMAGE_NAME }} --all-tags
